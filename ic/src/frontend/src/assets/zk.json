{"noir_version":"1.0.0-beta.9+6abff2f16e1c1314ba30708d1cf032a536de3d19","hash":"11402255198608176751","abi":{"parameters":[{"name":"birth_year","type":{"kind":"field"},"visibility":"private"},{"name":"current_year","type":{"kind":"field"},"visibility":"public"}],"return_type":null,"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"}}},"bytecode":"H4sIAAAAAAAA/+Va227aQBAdX6DcAoRrmhBw3/pUeW0I5i1SH/odRTWf0g/ol/SDqv5JpXbLjLpZO0iNz1qgjBSNsTfDmbPHexaMR8dY/fnL+Djk7FMxPM6PnONqoYC14hK4VWsrOTC5kONACAk46ws/rXM6RxaowCGJafywXufbJFep+hwnu322ideb/UOmMrXJNl+SLE3zbJ1td/vdNt6pdZqrw2aXHLiWX71WyrXigNxMrm/xVxUnsuewpOeX1jR1FLK2Qn7tUTE8h7wgepFouATcKBFIVfANwt2sTWC/rjhs0vMr/UvrNwm7GKCdKOC+fVTdwzGQ8/0GyKG5uOi6EdXr/B5dnvO3OLeFECFQX7Cdv03und8ksarztwgn1DZdhvMje+6QG+fvUP3O3yI3zt91CbhLeOfvEu5m7dF5O7/msEd45+/ReTt/m/tGOz9yvq/IjfPruhGddn70ogv8WKgARpPIQUnrTnYRfc4Doqc7hj6TbZ4bUHEXEV7IhFTdkfSBPQ6AQqlzm4zYSWWcS+A6EfiQ87UQImIe0r8tjJzTgyILFHqbjBTlkHCivAZObp2iRCwYdYtyxHkshIgAR1QUpR4UWaDQogwIJ8oR4UQ5djS5Nn9VcSJvRCR/E6BG/uczX1wtFBB3bOKdugQ8dVB3BhSDq75nBsGgurU6CGA7VruDzDnfCCHiFnMqOogeFFmg0A5ikljVQeaEE/0N1eMgcbWAbuWQ/L0l7E1dl4MgcZt4b10CvnVQ947O20F033cGwaC6TrDOGCv6284ZvV7nlCiBC1u4TS4WnO+FEHHJBRWdUw9aWaDO0DnTLddaEE6U9/RqRamOX5rneQlc2Dd3JhdLzishRAS4pKIo9aB3FqgzFKWS7dyScKJcgScXLL5kwXOGfk6BvLGXQJ3Iz8FMLs3jsnM6PnD++OvHp+/fvr6X88Lbk1830PHBs9QAPiJIpH7XTf2/v5Kxo2Mcd61r0n9Y8n/eM699K58ae2rrfVVyTWqOOZt4pY+2ladGXfTjHB0TN/VL52pqHE+sPk2+H0EYpJ6s5w0qhm9dk7H2PePh8SkbS1DyXhKimYlxTvj8DdcPAkzsLQAA","debug_symbols":"nZPBjoMgFEX/hbUL4aFif2UyaailDQlBQ3WSSdN/n9d3daZdTNJ0c4+A9xhFruoYDst5H/NpvKjdx1UdSkwpnvdpHPwcx8yz11ultuF+LiHwlHpY59bkS8iz2uUlpUp9+bTITZfJZ+HsC6/WlQr5yGThKaZwv7pVf+36/6rW7VrWRL/15vV+a7a+0+/0e7f2Db3TN53e+q5+6n/yyA+xPH1xVfMjK6UljSRJWslGspXsJJ1kj9Za5ja/tDYAARZogBboAAf0AlMDsBi2EIMACzRAC3SAA3oB1YAGYCFYCBaChWAhWAgWgsXCYmGxsFhYLCwWFguLZYtlOKAXNDWgAQMQYAG22Nt9G0v0hxTWv/+05OHhMMzf07ayHZepjEM4LiXct1HWeGN/AA==","file_map":{"50":{"source":"fn main(birth_year: Field, current_year: pub Field) {\n    // Cast to signed integers (i32)\n    let birth_year_i32 = birth_year as i32;\n    let current_year_i32 = current_year as i32;\n\n    let age = current_year_i32 - birth_year_i32;\n\n    // Check if age >= 18\n    assert(age >= 18);\n}\n\n#[test]\nfn test_main() {\n    // Should pass (age = 26)\n    main(1998, 2025);\n\n    // Should fail if uncommented (age = 17)\n    // main(2007, 2024);\n}\n","path":"/Users/iqbalfachry/kode/react/KaryaTip/zk/src/main.nr"}},"names":["main"],"brillig_names":["directive_integer_quotient","directive_invert"]}